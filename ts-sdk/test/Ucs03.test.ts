import { assert, describe, it } from "@effect/vitest"
import * as Ucs03 from "@unionlabs/sdk/Ucs03"
import { Effect, pipe, Schema as S } from "effect"
import { toHex } from "viem"

// @ts-ignore
BigInt["prototype"].toJSON = function() {
  return this.toString()
}

describe("UCS03", () => {
  describe("Zkgm.t.sol", () => {
    /**
     * @see https://github.com/unionlabs/union/blob/69ee9d5/evm/tests/src/05-app/Zkgm.t.sol#L6202
     */
    it.effect("test_create_foa()", () =>
      Effect.gen(function*() {
        const order = Ucs03.TokenOrderV1.fromOperand([
          toHex("union1jk9psyhvgkrt2cumz8eytll2244m2nnz4yt2g2"),
          "0xBe68fC2d8249eb60bfCf0e71D5A0d2F2e292c4eD",
          "0x6d756e6f",
          100n,
          "muno",
          "muno",
          6,
          0n,
          "0x16628cB81ffDA9B8470e16299eFa5F76bF45A579",
          100n,
        ])
        assert.equal(
          (yield* S.encode(Ucs03.Ucs03WithInstructionFromHex)(order)).toLowerCase(),
          "0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000002c756e696f6e316a6b397073796876676b72743263756d7a386579746c6c323234346d326e6e7a34797432673200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014be68fc2d8249eb60bfcf0e71d5a0d2f2e292c4ed00000000000000000000000000000000000000000000000000000000000000000000000000000000000000046d756e6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046d756e6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046d756e6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001416628cb81ffda9b8470e16299efa5f76bf45a579000000000000000000000000",
        )
      }))

    /**
     * @see https://github.com/unionlabs/union/blob/69ee9d5/evm/tests/src/05-app/Zkgm.t.sol#L6384
     */
    it.effect("test_create_foa_v2_image_cosmwasm()", () =>
      Effect.gen(function*() {
        const order = Ucs03.TokenOrderV2.fromOperand([
          "0xBe68fC2d8249eb60bfCf0e71D5A0d2F2e292c4eD",
          toHex("union1jk9psyhvgkrt2cumz8eytll2244m2nnz4yt2g2"),
          "0x49aCf968c7E8807B39e980b2a924E97C8ead3a22",
          10n,
          toHex("union1uyxeud073ttss4stt92hvt4wgzzyrssqata8058305km6xp7vzgs85kpst"),
          10n,
          1,
          "0xe8d01a88f46d02e2e857eaaf5c922699b5edc2dbd6eb4fa2049a472a0bb7a7db",
        ])
        const encoded = yield* S.encode(Ucs03.Ucs03FromHex)(order)
        assert.equal(
          encoded.toLowerCase(),
          "0x0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000014be68fc2d8249eb60bfcf0e71d5a0d2f2e292c4ed000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c756e696f6e316a6b397073796876676b72743263756d7a386579746c6c323234346d326e6e7a3479743267320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001449acf968c7e8807b39e980b2a924e97c8ead3a220000000000000000000000000000000000000000000000000000000000000000000000000000000000000040756e696f6e31757978657564303733747473733473747439326876743477677a7a7972737371617461383035383330356b6d36787037767a677338356b7073740000000000000000000000000000000000000000000000000000000000000020e8d01a88f46d02e2e857eaaf5c922699b5edc2dbd6eb4fa2049a472a0bb7a7db",
        )
      }))
  })

  it.effect("birth", () =>
    Effect.gen(function*() {
      assert.deepStrictEqual(
        yield* pipe(
          "0x00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000204b2c85a26bb9fb2400000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000204b2c85a26bb9fb2400000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000002c756e696f6e316a6768663236753576777278666e6435376a78657a736e73687a637a777767796878776a706500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014d31e23d60e07fa632334c2a671733a068592c638000000000000000000000000000000000000000000000000000000000000000000000000000000000000000261750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014ba5ed44733953d79717f6269357c77718c8ba5ed00000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000014ba5ed44733953d79717f6269357c77718c8ba5ed0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" as const,
          S.decode(Ucs03.Ucs03WithInstructionFromHex),
        ),
        Ucs03.TokenOrderV2.make({
          opcode: 3,
          version: 2,
          operand: [
            "0x756e696f6e316a6768663236753576777278666e6435376a78657a736e73687a637a777767796878776a7065",
            "0xd31e23d60e07fa632334c2a671733a068592c638",
            "0x6175",
            9994400000000000000000000000n,
            "0xba5ed44733953d79717f6269357c77718c8ba5ed",
            9994400000000000000000000000n,
            3,
            "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000014ba5ed44733953d79717f6269357c77718c8ba5ed0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          ],
        }),
      )
    }))

  it.effect.only("scratch", () =>
    Effect.gen(function*() {
      const encodedGood =
        "0xa000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000002a62626e3132326e79336d6570326c376e687461667077617632793965356a72736c68656b726e3866726800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001406627714f3F17a701f7074a12C02847a5D2Ca48700000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014e53dCec07d16D88e386AE0710E86d9a400f83c3100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000003fbdec5000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a62626e3132326e79336d6570326c376e687461667077617632793965356a72736c68656b726e3866726800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001406627714f3F17a701f7074a12C02847a5D2Ca48700000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014e53dCec07d16D88e386AE0710E86d9a400f83c31000000000000000000000000" as const

      const resultGood = yield* S.decode(Ucs03.Ucs03WithInstructionFromHex)(encodedGood)

      const encodedBad =
        "0xa000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000002a62626e3132326e79336d6570326c376e687461667077617632793965356a72736c68656b726e3866726800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001406627714f3F17a701f7074a12C02847a5D2Ca48700000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014e53dcec07d16d88e386ae0710e86d9a400f83c3100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000003ec76b4000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a62626e3132326e79336d6570326c376e687461667077617632793965356a72736c68656b726e3866726800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001406627714f3F17a701f7074a12C02847a5D2Ca48700000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047562626e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014e53dcec07d16d88e386ae0710e86d9a400f83c31000000000000000000000000" as const

      const resultBad = yield* S.decode(Ucs03.Ucs03WithInstructionFromHex)(encodedBad)

      console.log({
        resultGood: JSON.stringify(resultGood, null, 2),
        resultBad: JSON.stringify(resultBad, null, 2),
      })
    }))
})
